{"ast":null,"code":"var _jsxFileName = \"/home/erlend/React/deep-flight/src/Download.js\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass Download extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    }, \"DOWNLOAD THE GAME!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxwrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n} // Only show login form if user is not logged in\n\n\nclass LoginForm extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"... but first log in.\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        name: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.name) {\n          errors.name = 'Required';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        console.log(\"Form received:\\n\" + values.name + \"\\n\" + values.password);\n        const response = fetch(\"localhost:7000/login\", {\n          // was: await fetch\n          method: 'POST',\n          // *GET, POST, PUT, DELETE, etc.\n          mode: 'cors',\n          // no-cors, *cors, same-origin\n          cache: 'no-cache',\n          // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: 'same-origin',\n          // include, *same-origin, omit\n          headers: {\n            'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n          },\n          redirect: 'follow',\n          // manual, *follow, error\n          referrerPolicy: 'no-referrer',\n          // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n          body: JSON.stringify(values) // body data type must match \"Content-Type\" header\n\n        }); //return response.json(); // parses JSON response into native JavaScript objects\n\n        console.log(response);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, ({\n      isSubmitting\n    }) => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Lgin\"))));\n  }\n\n}\n\nexport default Download;","map":{"version":3,"sources":["/home/erlend/React/deep-flight/src/Download.js"],"names":["React","Component","Formik","Form","Field","ErrorMessage","Download","render","LoginForm","name","password","values","errors","setSubmitting","console","log","response","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","isSubmitting"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass Download extends Component {\n  render() {\n    return (\n      <div>\n        <h2>DOWNLOAD THE GAME!</h2>\n        <div className=\"boxwrapper\">\n        <div className=\"box\">\n        <LoginForm/>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Only show login form if user is not logged in\nclass LoginForm extends Component {\n  render(){\n    return(\n      <div>\n      <p>... but first log in.</p>\n      <Formik\n        initialValues={{ name: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.name) {\n            errors.name = 'Required';\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(\"Form received:\\n\" + values.name + \"\\n\" +  values.password);\n          const response = fetch(\"localhost:7000/login\", { // was: await fetch\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'application/json'\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify(values) // body data type must match \"Content-Type\" header\n          });\n          //return response.json(); // parses JSON response into native JavaScript objects\n          console.log(response);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"name\" placeholder=\"username\"/>\n            <ErrorMessage name=\"name\" component=\"div\" />\n            <Field type=\"password\" name=\"password\" placeholder=\"password\"/>\n            <ErrorMessage name=\"password\" component=\"div\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Lgin\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n    );\n  }\n\n}\n\nexport default Download;\n"]},"metadata":{},"sourceType":"module"}